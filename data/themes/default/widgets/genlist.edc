#define ITEM_HEIGHT 26
#define BORDER_COLOR 34 35 36 255
#define LIGHT_BORDER_COLOR 70 72 73 255
#define LIST_BORDER_COLOR 45 46 47 255
#define LIST_ITEM_SELECTED_COLOR 58 110 155 255
#define LIST_ITEM_INACTIVE_COLOR 112 121 129 255
#define BG_COLOR 39 42 43 255
#define LIST_ITEM_REORDERED_COLOR 200 150 0 255

group { name: "elm/genlist/item/eflete/default/default";
   data.item: "stacking" "above";
   data.item: "selectraise" "on";
   data.item: "texts" "elm.text";
   data.item: "contents" "elm.swallow.icon elm.swallow.end";
   data.item: "treesize" TREEPAD;
   parts {
      part { name: "event";
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "base";
         type:RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            color: LIGHT_GREY_BG_COLOR;
            rel2.to:"bg";
         }
      }
      part { name: "bg";
         type: RECT;
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: LIST_ITEM_SELECTED_COLOR;
            rel2.offset: 0 -2;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "elm.swallow.icon";
         clip_to: "disclip";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 1;
            align: 0.0 0.5;
            rel1.to: "icon_start_arrea";
            rel2.to: "icon_start_arrea";
         }
      }
      part { name: "elm.swallow.end";
         clip_to: "disclip";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            aspect: 1.0 1.0;
            rel1.to: "icon_end_arrea";
            rel2.to: "icon_end_arrea";
         }
      }
      part { name: "elm.text";
         clip_to: "disclip";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            color: 246 246 246 255;
            text {
               font: FN;
               size: 12;
               min: 0 1;
               align: 0.0 0.5;
               text_class: "list_item";
            }
            rel1.to: "text_arrea";
            rel2.to: "text_arrea";
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "disclip";
         type: RECT;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 125;
         }
      }
      part { name: "left_pad";
         type: SPACER;
         description { state: "default" 0.0;
            SET_SIZE(6 ITEM_HEIGHT, 6 ITEM_HEIGHT);
            align: 0.0 0.0;
         }
      }
      part { name: "right_pad";
         type: SPACER;
         description { state: "default" 0.0;
            SET_SIZE(6 ITEM_HEIGHT, 6 ITEM_HEIGHT);
            align: 1.0 1.0;
         }
      }
      part { name: "icon_start_arrea";
         type: SPACER;
         description { state: "default" 0.0;
            SET_SIZE(20 19, 20 19);
            rel1 {
               to_x: "left_pad";
               relative: 1.0 0.0;
            }
            align: 0.0 0.5;
         }
      }
      part { name: "icon_end_arrea";
         type: SPACER;
         description { state: "default" 0.0;
            SET_SIZE(20 19, 20 19);
            rel2 {
               to_x: "right_pad";
               relative: 0.0 1.0;
            }
            align: 1.0 0.5;
         }
      }
      part { name: "text_arrea";
         type: SPACER;
         description { state: "default" 0.0;
            rel1 {
               to_x: "icon_start_arrea";
               relative: 1.0 0.0;
            }
            rel2 {
               to_x: "icon_end_arrea";
               relative: 0.0 1.0;
            }
         }
      }
      part { name: "base_border_top";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 1;
            color: LIGHT_BORDER_COLOR;
            min: 1 1;
            rel1 {
               to_x: "left_pad";
               relative: 0.5 0.0;
               offset: 0 -1;
            }
            rel2 {
               to_x: "right_pad";
               relative: 0.5 0.0;
               offset: 0 -1;
            }
         }
      }
      part { name: "base_border_bot";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 1;
            color: LIGHT_BORDER_COLOR;
            min: 1 1;
            rel1 {
               to_x: "left_pad";
               relative: 0.5 1.0;
            }
            rel2 {
               to_x: "right_pad";
               relative: 0.5 1.0;
            }
         }
      }
   }
   programs {
      program {
         name:    "go_active";
         signal:  "elm,state,selected";
         source:  "elm";
         action:  STATE_SET "selected" 0.0;
         target:  "bg";
         target:  "elm.text";
      }
      program {
         name:    "go_passive";
         signal:  "elm,state,unselected";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "bg";
         target:  "elm.text";
         transition: LINEAR 0.1;
      }
      program {
         name:    "go_disabled";
         signal:  "elm,state,disabled";
         source:  "elm";
         action:  STATE_SET "disabled" 0.0;
         target:  "disclip";
      }
      program {
         name:    "go_enabled";
         signal:  "elm,state,enabled";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "disclip";
      }
   }
}

group { name: "elm/genlist/item/eflete/program_after/default";
   inherit: "elm/genlist/item/eflete/default/default";
   parts{
      part { name: "base";
         description { state: "default" 0.0;
            color: 52 70 84 255;
         }
      }
   }
}

group { name: "elm/genlist/tree/eflete/tree/default";
   data.item: "stacking" "above";
   data.item: "selectraise" "on";
   data.item: "texts" "elm.text";
   data.item: "contents" "elm.swallow.icon elm.swallow.end elm.swallow.add elm.swallow.del";
   data.item: "treesize" TREEPAD;
   images {
      image: "treemenu-lvl1-item-current-bg.png" COMP;
      image: "treemenu-lvl1-item-bg.png" COMP;
      image: "icon-treemenu-lvl1-slidedown.png" COMP;
      image: "icon-treemenu-lvl1-slideup.png" COMP;
   }
   parts {
      part { name: "event";
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
     part { name: "base";
         mouse_events: 0;
         description { state: "default" 0.0;
            fill.smooth: 0;
            image {
               normal: "treemenu-lvl1-item-bg.png";
               border: 0 0 1 1;
            }
         }
      }
      part { name: "bg";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 1;
            fill.smooth: 0;
            image {
               normal: "treemenu-lvl1-item-current-bg.png";
               border: 0 0 1 1;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            image {
               normal: "treemenu-lvl1-item-bg.png";
               border: 0 0 1 1;
            }
         }
      }
      part { name: "elm.swallow.pad";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
            rel2.relative: 0.0  1.0;
         }
      }
      part { name: "elm.swallow.icon";
         clip_to: "disclip";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
            SET_SIZE(ITEM_HEIGHT, ITEM_HEIGHT);
            rel1 {
               to_x: "elm.swallow.pad";
               relative: 1.0  0.0;
            }
            rel2.to_x: "elm.swallow.pad";
         }
      }
      part { name: "swallow.end_left_top_pad";
         type:SPACER;
         description {
            SET_SIZE(5, 5);
            align: 1.0 0.0;
         }
      }
      part { name: "swallow.end_left_bot_pad";
         type:SPACER;
         description {
            SET_SIZE(5, 5);
            align: 1.0 1.0;
         }
      }
      part { name: "elm.swallow.end";
         clip_to: "disclip";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 1.0 0.5;
            aspect: 1.0 1.0;
            SET_SIZE(ITEM_HEIGHT, ITEM_HEIGHT);
            rel1 {
               relative: 0.0  1.0;
               to: "swallow.end_left_top_pad";
            }
            rel2 {
               relative: 0.0  0.0;
               to: "swallow.end_left_bot_pad";
            }
         }
      }
      part { name: "text_container";
         type:SPACER;
         scale: 1;
         description{ state:"default" 0.0;
            align: 0.0 0.0;
            fixed: 0 1;
            rel1 {
               to: "elm.swallow.icon";
               relative: 1.0 0.0;
            }
            rel2 {
               to: "elm.swallow.add";
               relative: 0.0 1.0;
            }
         }
      }
      part { name: "text_container_top_pad";
         type:SPACER;
         scale: 1;
         description{ state:"default" 0.0;
            align: 0.0 0.0;
            SET_SIZE(ITEM_HEIGHT/8, ITEM_HEIGHT/8);
            rel1.to: "text_container";
            rel2.to: "text_container";
         }
      }
      part { name: "text_container_bot_pad";
         type:SPACER;
         scale: 1;
         description{ state:"default" 0.0;
            align: 0.0 1.0;
            SET_SIZE(ITEM_HEIGHT/8, ITEM_HEIGHT/8);
            rel1.to: "text_container";
            rel2.to: "text_container";
         }
      }
     part { name: "arrow";
         type: RECT;
         description { state: "default" 0.0;
            fixed: 1 0;
            min: 12 6;
            align: 0.0 0.5;
            color: 0 0 0 0;
            rel1 {
               to: "elm.swallow.icon";
               relative: 1.0 0.0;
            }
            rel2 {
               to: "elm.swallow.end";
               offset: 0 0;
            }
         }
      }
      part { name: "arrow_img";
         clip_to: "disclip";
         mouse_events: 0;
         scale: 1;
         ignore_flags: ON_HOLD;
         type: IMAGE;
         description { state: "default" 0.0;
            fixed: 1 1;
            SET_SIZE(12 , 6);
            image.normal: "icon-treemenu-lvl1-slidedown.png";
            rel1.to: "elm.swallow.end";
            rel2 {
               to: "elm.swallow.end";
               offset: 0 0;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            image.normal: "icon-treemenu-lvl1-slideup.png";
         }
      }
      part { name: "elm.swallow.add";
         clip_to: "disclip";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            align: 1.0 0.5;
            aspect: 1.0 1.0;
            min: ITEM_HEIGHT ITEM_HEIGHT;
            max: ITEM_HEIGHT ITEM_HEIGHT;
            rel1 {
               to_y: "elm.swallow.end";
               relative: 1.0  0.0;
            }
            rel2 {
               relative: 0.0  1.0;
               offset: 0 0;
               to: "elm.swallow.del";
            }
         }
      }
      part { name: "elm.swallow.del";
         clip_to: "disclip";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            align: 1.0 0.5;
            aspect: 1.0 1.0;
            min: ITEM_HEIGHT ITEM_HEIGHT;
            max: ITEM_HEIGHT ITEM_HEIGHT;
            rel1 {
               to_y: "elm.swallow.end";
               relative: 1.0  0.0;
            }
            rel2 {
               relative: 0.0  1.0;
               offset: 0 0;
               to: "elm.swallow.end";
            }
         }
      }
      part { name: "elm.text";
         clip_to: "disclip";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            color: FN_COL_DEFAULT;
            text {
               font: FN;
               size: 14;
               min: 0 1;
               align: 0.0 0.5;
               text_class: "list_item";
            }
            rel1 {
               to: "text_container_top_pad";
               relative: 1.0  1.0;
            }
            rel2 {
               to: "elm.swallow.add";
               relative: 0.0  1.0;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "disclip";
         type: RECT;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 125;
         }
      }
   }
   programs {
      program { name: "expanded_sig";
         signal: "mouse,up,1"; source: "arrow";
         action: SIGNAL_EMIT "elm,action,expand,toggle" "elm";
      }
      program { name: "arrow_expand";
         signal: "elm,state,expanded"; source: "elm";
         action:  STATE_SET "selected" 0.0;
         target: "arrow_img";
         target:  "bg";
      }
      program { name: "arrow_conract";
         signal: "elm,state,contracted"; source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "arrow_img";
         target:  "bg";
      }
      program { name: "go_active";
         signal:  "elm,state,selected";
         source:  "elm";
         action:  STATE_SET "selected" 0.0;
         target:  "elm.text";
      }
      program { name: "go_passive";
         signal:  "elm,state,unselected";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "elm.text";
         transition: LINEAR 0.1;
      }
      program { name: "go_disabled";
         signal:  "elm,state,disabled";
         source:  "elm";
         action:  STATE_SET "disabled" 0.0;
         target:  "disclip";
      }
      program { name: "go_enabled";
         signal:  "elm,state,enabled";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "disclip";
      }
   }
}

group { name: "elm/genlist/item/eflete/signals/default";
   inherit: "elm/genlist/item/eflete/default/default";
   data.item: "texts" "elm.text elm.text.source elm.text.program";
   parts {
      part { name: "pad.texts";
         type: SPACER;
         description { state: "default" 0.0;
            align: 0.0 0.5;
            FIXED_SIZE(15, 15);
            rel1 {
               relative: 1.0 0.0;
               to_x: "elm.text";
               to_y: "text_arrea";
            }
            rel2.to: "text_arrea";
         }
      }
      part { name: "elm.text";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         clip_to: "disclip";
         description { state: "default" 0.0;
            align: 0.0 0.5;
            color: FN_COL_DEFAULT;
            rel1.to: "text_arrea";
            rel2.to: "text_arrea";
            text {
               font: FN;
               size: 12;
               text_class: "list_item";
               max: 1 0;
               align: 0.0 0.5;
               ellipsis: -1;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "elm.text.source";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         clip_to: "disclip";
         description { state: "default" 0.0;
            align: 1.0 1.0;
            color: FN_COL_GREY;
            rel1 {
               relative: 0.0 1.0;
               to_x: "pad.texts";
               to_y: "pad.texts.top";
            }
            rel2 {
               relative: 1.0 0.0;
               offset: -1 0;
               to: "pad.texts.middle";
            }
            text {
               font: FN;
               size: 10;
               text_class: "list_item";
               min: 1 1;
               max: 1 0;
               align: 1.0 0.0;
               ellipsis: -1;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "source.label";
         type: TEXT;
         description { state: "default" 0.0;
            align: 1.0 0.0;
            color: FN_COL_GREY;
            rel1 {
               relative: 1.0 0.0;
               to_x: "pad.texts";
               to_y: "elm.text.source";
            }
            rel2 {
               relative: 0.0 1.0;
               offset: -1 0;
               to: "elm.text.source";
            }
            text {
               text: "source: ";
               font: FN;
               size: 10;
               min: 1 0;
               max: 1 0;
               align: 1.0 0.0;
               ellipsis: -1;
            }
         }
      }
      part { name: "program.label";
         type: TEXT;
         description { state: "default" 0.0;
            align: 1.0 1.0;
            color: FN_COL_GREY;
            rel1 {
               relative: 1.0 0.0;
               to_x: "pad.texts";
               to_y: "elm.text.program";
            }
            rel2 {
               relative: 0.0 1.0;
               offset: -1 0;
               to: "elm.text.program";
            }
            text {
               text: "Program: ";
               font:  FN;
               size: 10;
               min: 1 0;
               max: 1 0;
               align: 1.0 1.0;
               ellipsis: -1;
            }
         }
      }
      part { name: "elm.text.program";
         type: TEXT;
         description { state: "default" 0.0;
            align: 1.0 0.0;
            color: FN_COL_GREY;
            rel1 {
               relative: 0.0 1.0;
               to_x: "pad.texts";
               to_y: "pad.texts.middle";
            }
            rel2 {
               relative: 1.0 0.0;
               offset: -1 0;
               to_x: "pad.texts.middle";
               to_y: "pad.texts.bottom";
            }
            text {
               font: FN;
               size: 10;
               min: 1 1;
               max: 1 0;
               align: 1.0 1.0;
               ellipsis: -1;
            }
         }
      }
      part { name: "pad.texts.middle";
         type: SPACER;
         description { state: "default" 0.0;
            align: 1.0 0.5;
            FIXED_SIZE(5, 5);
            rel1.to: "text_arrea";
            rel2.to: "text_arrea";
         }
      }
      part { name: "pad.texts.bottom";
         type: SPACER;
         description { state: "default" 0.0;
            align: 1.0 1.0;
            FIXED_SIZE(5, 5);
            rel1.to: "text_arrea";
            rel2.to: "text_arrea";
         }
      }
      part { name: "pad.texts.top";
         type: SPACER;
         description { state: "default" 0.0;
            align: 1.0 0.0;
            FIXED_SIZE(5, 5);
            rel1.to: "text_arrea";
            rel2.to: "text_arrea";
         }
      }
   }
   programs {
      program {
         name:    "go_active";
         signal:  "elm,state,selected";
         source:  "elm";
         action:  STATE_SET "selected" 0.0;
         target:  "bg";
         target:  "elm.text";
         target:  "elm.text.source";
      }
      program {
         name:    "go_passive";
         signal:  "elm,state,unselected";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "bg";
         target:  "elm.text";
         target:  "elm.text.source";
         transition: LINEAR 0.1;
      }
   }
}

group { name: "elm/genlist/item/eflete/tween/default";
   inherit: "elm/genlist/item/eflete/default/default";
   parts {
      part { name: "bg";
         type: RECT;
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: LIST_ITEM_SELECTED_COLOR;
            rel2.offset: 0 -2;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
         description { state: "reordered" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: LIST_ITEM_REORDERED_COLOR;
         }
      }
      part { name: "text_arrea";
         type: SPACER;
         description { state: "default" 0.0;
            rel1 {
               to_x: "padding.icon";
               relative: 1.0 0.0;
            }
            rel2 {
               to_x: "icon_end_arrea";
               relative: 0.0 1.0;
            }
         }
      }
      part { name: "padding.icon";
         type: SPACER;
         description { state: "default" 0.0;
            align: 0.0 0.5;
            FIXED_SIZE(5, 5);
            rel1 {
               relative: 1.0 0.0;
               to_x: "icon_start_arrea";
            }
         }
      }
   }
   programs {
      program { name: "reorder";
         signal: "elm,state,reorder,enabled";
         source: "elm";
         action: STATE_SET "reordered" 0.0;
         target: "bg";
      }
      program { name: "unreorder";
         signal: "elm,state,reorder,disabled";
         source: "elm";
         after: "go_active";
      }
   }
}

group { name: "elm/genlist/item/eflete/level1/default";
    inherit:"elm/genlist/item/eflete/default/default";
    images {
      image: "treemenu-lvl1-item-current-pressed.png" COMP;
      image: "treemenu-lvl1-item-current-bg.png" COMP;
   }
   parts {
     part { name: "base";
         type: IMAGE;
         mouse_events: 0;
         description { state: "default" 0.0;
            fill.smooth: 0;
            color: WHITE_VISIBLE_COLOR;
            image {
               normal: "treemenu-lvl1-item-current-bg.png";
               border: 0 0 1 1;
            }
         }
      }
      part { name: "bg";
         type: IMAGE;
         description { state: "default" 0.0;
            image {
               normal: "treemenu-lvl1-item-current-pressed.png";
               border: 0 0 1 1;
            }
            color: WHITE_VISIBLE_COLOR;
            rel2.offset: 0 0;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "base_border_top";
         description { state: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "base_border_bot";
         description { state: "default" 0.0;
            visible: 0;
         }
      }
   }
}

group { name: "elm/genlist/item/eflete/level2/default";
   inherit:"elm/genlist/item/eflete/default/default";
   parts {
     part { name: "base";
         type: IMAGE;
         mouse_events: 0;
         description { state: "default" 0.0;
            fill.smooth: 0;
            color: WHITE_VISIBLE_COLOR;
            image {
               normal: "treemenu-lvl1-item-current-bg.png";
               border: 0 0 3 3;
            }
         }
      }
      part { name: "bg";
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "base_border_top";
         description { state: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "base_border_bot";
         description { state: "default" 0.0;
            visible: 0;
         }
      }
   }
}

group { name: "elm/genlist/item/eflete/level3/default";
    inherit:"elm/genlist/item/eflete/default/default";
   parts {
      part { name: "base";
         description { state: "default" 0.0;
            color: BG_COLOR;
         }
      }
      part { name: "text_arrea";
         description { state: "default" 0.0;
            rel1.to_x: "left_spacer";
         }
      }
      part { name: "left_spacer";
         type: SPACER;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            SET_SIZE(15 15, 15 15);
            rel1 {
               to: "icon_start_arrea";
               relative: 1.0 0.0;
            }
         }
      }
      part { name: "base_border_top";
         description { state: "default" 0.0;
            color: BORDER_COLOR;
            rel1.relative: 0.0 0.0;
            rel2.relative: 1.0 0.0;
         }
      }
      part { name: "base_border_bot";
         description { state: "default" 0.0;
            color: BORDER_COLOR;
            rel1.relative: 0.0 1.0;
            rel2.relative: 1.0 1.0;
         }
      }
   }
}

group { name: "elm/genlist/item/eflete/usage_state/default";
    inherit:"elm/genlist/item/eflete/level3/default";
   parts {
      part { name: "left_spacer";
         type: SPACER;
         description { state: "default" 0.0;
            SET_SIZE(40 15, 40 15);
         }
      }
   }
}

group { name: "elm/genlist/item/eflete/level4/default";
   inherit:"elm/genlist/item/eflete/default/default";
   parts {
      part { name: "base";
         description { state: "default" 0.0;
            color: BG_COLOR;
         }
      }
      part { name: "bg";
         description { state: "reordered" 0.0;
            inherit: "default" 0.0;
            color: LIST_ITEM_REORDERED_COLOR;
            visible: 1;
         }
      }
      part { name: "base_border_top";
         description { state: "default" 0.0;
            color: BORDER_COLOR;
         }
      }
      part { name: "base_border_bot";
         description { state: "default" 0.0;
            color: BORDER_COLOR;
         }
      }
   }
   programs {
      program {
         name:    "reorder";
         signal:  "elm,state,reorder,enabled";
         source:  "elm";
         action:  STATE_SET "reordered" 0.0;
         target:  "bg";
      }
      program {
         name:    "unreordered";
         signal:  "elm,state,reorder,disabled";
         source:  "elm";
         after:   "go_active";
      }
   }

}

group { name: "elm/genlist/item/eflete/mode/default";
   alias: "elm/genlist/item_odd/eflete/mode/default";
   data.item: "contents" "elm.swallow.modeicon elm.swallow.container";
   data.item: "treesize" TREEPAD;
   images.image: "treemenu-lvl2-item-bg.png" COMP;

   parts {
      part { name: "bg";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            image {
               normal: "treemenu-lvl2-item-bg.png";
               border: 0 0 1 1;
            }
            fill.smooth: 0;
         }
      }
      part { name: "end.bottom.pad";
         type: SPACER;
         description {
            SET_SIZE(5, 5);
            align: 1.0 1.0;
         }
      }
      part { name: "elm.swallow.modeicon";
         clip_to: "disclip";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 1.0 0.5;
            aspect: 1.0 1.0;
            SET_SIZE(ITEM_HEIGHT, ITEM_HEIGHT);
            rel1 {
               relative: 0.0  1.0;
               to_x: "end.bottom.pad";
               to_y: "start.top.pad";
            }
            rel2 {
               relative: 0.0  0.0;
               to: "end.bottom.pad";
            }
         }
      }
      part { name: "elm.swallow.container";
         type: SWALLOW;
         clip_to: "disclip";
         scale: 1;
         description { state: "default" 0.0;
            align: 0.0 0.5;
            rel1 {
               to_x: "start.top.pad";
               to_y: "elm.swallow.modeicon";
               relative: 1.0 0.0;
            }
            rel2 {
               to: "elm.swallow.modeicon";
               relative: 0.0 1.0;
            }
         }
      }
      part { name: "start.top.pad";
         type:SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            SET_SIZE(5, 5);
            rel2.offset: 0 0;
         }
      }
      part { name: "disclip";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: WHITE_VISIBLE_COLOR;
         }
      }
   }
}

group { name: "elm/genlist/item/eflete/history/default";
   data {
      item: "texts" "elm.text.source elm.text.message elm.text.new elm.text.old \
             elm.text.state";
      item: "states" "modify add delete restack";
   }
   parts {
      part { name: "event";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "bg";
         type: RECT;
         mouse_events: 0;
         scale: 1;
         clip_to: "disclip";
         description { state: "default" 0.0;
            color: LIGHT_GREY_BG_COLOR;
            rel2.offset: 0 -2;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            color: LIST_ITEM_SELECTED_COLOR;
         }
         description { state: "inactive" 0.0;
            inherit: "default" 0.0;
            color: LIST_ITEM_INACTIVE_COLOR;
         }
      }
      part { name: "disclip";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 125;
         }
      }
      part { name: "left_pad";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            SET_SIZE(6, 6);
         }
      }
      part { name: "right_pad";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align: 1.0 1.0;
            SET_SIZE(6, 6);
         }
      }
      part { name: "pad.indicator";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align: 0 0;
            SET_SIZE(5, 5);
            rel1 {
               relative: 1.0 0.0;
               to_x: "left_pad";
            }
         }
      }
      part { name: "text_arrea";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            rel1 {
               relative: 1.0 1.0;
               to_x: "pad.indicator";
               to_y: "left_pad";
            }
            rel2 {
               relative: 0.0 0.0;
               to: "right_pad";
            }
         }
      }
      part { name: "elm.text.source";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         clip_to: "disclip";
         description { state: "default" 0.0;
            align: 0.0 0.0;
            color: FN_COL_DEFAULT;
            rel1.to: "text_arrea";
            rel2.to: "text_arrea";
            text {
               font: FN;
               size: 12;
               max: 1 1;
               align: 0.0 0.0;
               ellipsis: -1;
            }
         }
      }
      part { name: "base_border_top";
         type: RECT;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            min: 1 1;
            color: LIGHT_BORDER_COLOR;
            rel1 {
               relative: 0.5 0.0;
               offset: 0 -1;
               to_x: "left_pad";
            }
            rel2 {
               relative: 0.5 0.0;
               offset: 0 -1;
               to_x: "right_pad";
            }
         }
      }
      part { name: "base_border_bot";
         type: RECT;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            min: 1 1;
            fixed: 1 1;
            color: LIGHT_BORDER_COLOR;
            rel1 {
               relative: 0.5 1.0;
               to_x: "left_pad";
            }
            rel2 {
               relative: 0.5 1.0;
               to_x: "right_pad";
            }
         }
      }
      part { name: "pad.texts";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            SET_SIZE(5, 5);
            rel1 {
               relative: 1.0 0.0;
               to_x: "elm.text.source";
               to_y: "text_arrea";
            }
            rel2 {
               to: "text_arrea";
            }
         }
      }
      part { name: "elm.text.new";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         clip_to: "disclip";
         description { state: "default" 0.0;
            align: 0.0 1.0;
            color: FN_COL_DEFAULT;
            rel1 {
               relative: 1.0 0.0;
               to_x: "pad.new";
               to_y: "label.new";
            }
            rel2 {
               offset: -1 0;
               to_x: "pad.texts.middle";
               to_y: "label.new";
            }
            text {
               font: FN;
               size: 12;
               min: 1 1;
               max: 1 0;
               align: 1.0 0.0;
               ellipsis: -1;
            }
         }
      }
      part { name: "label.new";
         type: TEXT;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.0 1.0;
            fixed: 1 1;
            color: FN_COL_DEFAULT;
            rel1 {
               relative: 1.0 0.0;
               to_x: "pad.message";
               to_y: "elm.text.message";
            }
            rel2 {
               offset: -1 0;
               to: "elm.text.message";
            }
            text {
               text: "to";
               font: FN;
               size: 12;
               min: 1 0;
               max: 1 0;
               align: 1.0 0.0;
               ellipsis: -1;
            }
         }
         description { state: "add" 0.0;
            inherit: "default" 0.0;
            text.text: "add";
         }
         description { state: "delete" 0.0;
            inherit: "default" 0.0;
            text.text: "delete";
         }
        description { state: "restack" 0.0;
            inherit: "default" 0.0;
            text.text: "restack";
         }
      }
      part { name: "label.old";
         type: TEXT;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            color: FN_COL_GREY;
            rel1 {
               relative: 1.0 1.0;
               to_x: "pad.message";
               to_y: "pad.message.bottom";
            }
            rel2 {
               offset: -1 0;
               to: "text_arrea";
            }
            text {
               text: "from";
               font: FN;
               size: 10;
               min: 1 1;
               max: 1 1;
               align: 0.0 0.5;
               ellipsis: -1;
            }
         }
         description { state: "add" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
         description { state: "delete" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
         description { state: "restack" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.text.old";
         type: TEXT;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            color: FN_COL_GREY;
            rel1 {
               relative: 1.0 0.0;
               to_x: "pad.old";
               to_y: "label.old";
            }
            rel2 {
               offset: -1 0;
               to_x: "pad.texts.middle";
               to_y: "label.old";
            }
            text {
               font: FN;
               size: 10;
               min: 1 1;
               max: 1 1;
               align: 1.0 0.5;
               ellipsis: -1;
            }
         }
         description { state: "restack" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
         description { state: "add" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
         description { state: "delete" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "pad.texts.middle";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align: 1.0 0.0;
            SET_SIZE(5, 5);
            rel1.to: "text_arrea";
            rel2.to: "text_arrea";
         }
      }
      part { name: "pad.texts.top";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align: 1.0 0.0;
            SET_SIZE(5, 5);
            rel1.to: "text_arrea";
            rel2.to: "text_arrea";
         }
      }
      part { name: "indicator";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.0 0.5;
            max: 5 -1;
            color: WHITE_INVISIBLE_COLOR;
            rel1 {
               to: "left_pad";
               relative: 0.0 1.0;
            }
            rel2 {
               to_x: "left_pad";
               to_y: "right_pad";
               relative: 1.0 0.0;
            }
         }
         description { state: "delete" 0.0;
            inherit: "default" 0.0;
            color: 175 80 80 255;
         }
         description { state: "add" 0.0;
            inherit: "default" 0.0;
            color: 50 108 50 255;
         }
         description { state: "change" 0.0;
            inherit: "default" 0.0;
            color: 62 71 177 255;
         }
         description { state: "restack" 0.0;
            inherit: "default" 0.0;
            color: 218 118 64 255;
          }
      }
      part { name: "elm.text.state";
         type: TEXT;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            color: FN_COL_GREY;
            rel1 {
               relative: 0.0 1.0;
               to_x: "text_arrea";
               to_y: "pad.message.bottom";
            }
            rel2 {
               relative: 0.0 1.0;
               to_x: "pad.message";
               to_y: "text_arrea";
            }
            text {
               font: FN;
               size: 10;
               min: 0 1;
               max: 0 1;
               align: 0.0 0.0;
            }
         }
      }
      part { name: "elm.text.message";
         type: TEXT;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.0 0.5;
            color: FN_COL_DEFAULT;
            rel1 {
               relative: 1.0 0.0;
               to_x: "pad.texts";
               to_y: "elm.text.source";
            }
            rel2.to_y: "elm.text.source";
            text {
               font: FN;
               size: 12;
               max: 1 1;
            }
         }
      }
      part { name: "pad.message";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            SET_SIZE(5, 5);
            rel1 {
               relative: 1.0 0.0;
               to: "elm.text.message";
            }
         }
      }
      part { name: "pad.new";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            SET_SIZE(5, 5);
            rel1 {
               relative: 1.0 0.0;
               to: "label.new";
            }
         }
      }
      part { name: "pad.message.bottom";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            SET_SIZE(5, 5);
            rel1 {
               relative: 0.0 1.0;
               to: "elm.text.message";
            }
         }
      }
      part { name: "pad.old";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            SET_SIZE(5, 5);
            rel1 {
               relative: 1.0 0.0;
               to: "label.old";
            }
         }
      }
   }
   programs {
      program { name: "go_disabled";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "disclip";
      }
      program { name: "go_enabled";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "disclip";
      }
      program { name: "go_active";
         signal: "elm,state,selected";
         source: "elm";
         action: STATE_SET "selected" 0.0;
         target: "bg";
         target: "elm.text.source";
         target: "elm.text.new";
      }
      program { name: "go_passive";
         signal: "elm,state,unselected";
         source: "elm";
         action: STATE_SET "default" 0.0;
         transition: LINEAR 0.10000;
         target: "bg";
         target: "elm.text.source";
         target: "elm.text.new";
      }
      program { name: "ind_delete";
         signal: "elm,state,delete,active";
         source: "elm";
         action: STATE_SET "delete" 0.0;
         target: "indicator";
         target: "label.new";
         target: "label.old";
         target: "elm.text.old";
      }
      program { name: "ind_add";
         signal: "elm,state,add,active";
         source: "elm";
         action: STATE_SET "add" 0.00;
         target: "indicator";
         target: "label.new";
         target: "label.old";
         target: "elm.text.old";
      }
      program { name: "ind_change";
         signal: "elm,state,modify,active";
         source: "elm";
         action: STATE_SET "change" 0.0;
         target: "indicator";
      }
      program { name: "ind_restack";
         signal: "elm,state,restack,active";
         source: "elm";
         action: STATE_SET "restack" 0.0;
         target: "indicator";
         target: "label.new";
         target: "label.old";
         target: "elm.text.old";
      }
      program { name: "go_inactive";
         signal: "eflete,state,inactive";
         source: "eflete";
         action: STATE_SET "inactive" 0.0;
         transition: LINEAR 0.2;
         target: "bg";
      }
   }
}
group { name: "elm/genlist/item/eflete/history_inactive/default";
    inherit:"elm/genlist/item/eflete/history/default";
    parts {
      part { name: "bg";
         type: RECT;
         mouse_events: 0;
         scale: 1;
         clip_to: "disclip";
         description { state: "default" 0.0;
            color: LIST_ITEM_INACTIVE_COLOR;
            rel2.offset: 0 -2;
         }
      }
    }
}

group { name: "elm/genlist/base/eflete/default";
   images {
      image: "scroll-indicator.png" COMP;
      image: "scroll-area-dark.png" COMP;
      image: "section-item-bg.png" COMP;
   }
   data.item: "focus_highlight" "on";

   parts {
      program {
         name: "reload_on_load";
         signal: "load"; source: "";
         script {
            emit("reload", "elm");
         }
      }
// vert bar ////////////////////////////////////////////////////////////////
      part { name: "sb_vbar_show";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            rel1.offset: -11 -11;
            rel2.offset: 10 10;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "sb_vbar";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 0;
            min: 8 8;
            align: 1.0 0.0;
            rel1 {
               relative: 1.0 0.0;
               offset: -1 0;
            }
            rel2 {
               relative: 1.0 0.0;
               to_y: "sb_hbar";
            }
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            max: 0 -1;
         }
      }
      part { name: "sb_vbar_base";
         type: RECT;
         clip_to: "sb_vbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1 {
               relative: 0.0 0.0;
               to: "sb_vbar";
            }
            rel2 {
               relative: 1.0 1.0;
               to: "sb_vbar";
            }
         }
      }

      part { name: "sb_vbar_p1";
         type: RECT;
         clip_to: "sb_vbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1 {
               relative: 0.0 0.0;
               to: "sb_vbar";
            }
            rel2 {
               relative: 1.0 0.0;
               to: "elm.dragable.vbar";
            }
         }
      }
      part { name: "sb_vbar_p2";
         type: RECT;
         clip_to: "sb_vbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1 {
               relative: 0.0 1.0;
               to: "elm.dragable.vbar";
            }
            rel2 {
               relative: 1.0 1.0;
               to: "sb_vbar";
            }
         }
      }
      part { name: "elm.dragable.vbar";
         type: RECT;
         clip_to: "sb_vbar";
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 8 8;
            max: 8 -1;
            rel1 {
               relative: 0.5  0.5;
               to: "sb_vbar_base";
            }
            rel2 {
               relative: 0.5  0.5;
               to: "sb_vbar_base";
            }
            color: 0 0 0 0;
         }
         dragable {
            x: 0 0 0;
            y: 1 1 0;
            confine: "sb_vbar_base";
         }
      }
      program {
         name: "show_vertical_scroll";
         signal: "elm,action,show,vbar";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "sb_vbar";
         target: "sb_vbar_show";
      }
      program {
         name: "hide_vertical_scroll";
         signal: "elm,action,hide,vbar";
         source: "elm";
         action: STATE_SET "hidden" 0.0;
         target: "sb_vbar";
         target: "sb_vbar_show";
      }
      program {
         name: "vertical_scroll_down";
         signal: "mouse,down,1*";
         source: "sb_vbar_p1";
         action: DRAG_VAL_PAGE 0.0 -1.0;
         target: "elm.dragable.vbar";
      }
      program {
         name: "vertical_scroll_up";
         signal: "mouse,down,1*";
         source: "sb_vbar_p2";
         action: DRAG_VAL_PAGE  0.0 1.0;
         target: "elm.dragable.vbar";
      }

// horiz bar /////////////////////////////////////////////////////////////
      part { name: "sb_hbar_show";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            rel1.offset: -11 -11;
            rel2.offset: 10 10;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "sb_hbar";
         type: RECT;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 0 1;
            min: 8 8;
            align: 0.0 1.0;
            rel1 {
               relative: 0.0 1.0;
               offset: 0 -1;
            }
            rel2 {
               relative: 0.0 1.0;
               to_x: "sb_vbar";
            }
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            max: -1 0;
         }
      }
      part { name: "sb_hbar_base";
         type: RECT;
         clip_to: "sb_hbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1 {
               relative: 0.0 0.0;
               to: "sb_hbar";
            }
            rel2 {
               relative: 1.0 1.0;
               to: "sb_hbar";
            }
         }
      }
      part { name: "sb_hbar_p1";
         type: RECT;
         clip_to: "sb_hbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1 {
               relative: 0.0 0.0;
               to: "sb_hbar";
            }
            rel2 {
               relative: 0.0 1.0;
               to: "elm.dragable.hbar";
            }
         }
      }
      part { name: "sb_hbar_p2";
         type: RECT;
         clip_to: "sb_hbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1 {
               relative: 1.0 0.0;
               to: "elm.dragable.hbar";
            }
            rel2 {
               relative: 1.0 1.0;
               to: "sb_hbar";
            }
         }
      }
      part { name: "elm.dragable.hbar";
         type: RECT;
         clip_to: "sb_hbar";
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 8 8;
            max: -1 8;
            color: 0 0 0 0;
            rel1 {
               relative: 0.5  0.5;
               to: "sb_hbar_base";
            }
            rel2 {
               relative: 0.5  0.5;
               to: "sb_hbar_base";
            }
         }
         dragable {
            x: 1 1 0;
            y: 0 0 0;
            confine: "sb_hbar_base";
         }
      }

      program {
         name: "show_horizontal_scroll";
         signal: "elm,action,show,hbar";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "sb_hbar";
         target: "sb_hbar_show";
      }
      program {
         name: "hide_horizontal_scroll";
         signal: "elm,action,hide,hbar";
         source: "elm";
         action: STATE_SET "hidden" 0.0;
         target: "sb_hbar";
         target: "sb_hbar_show";
      }
      program {
         name: "horizontal_scroll_down";
         signal: "mouse,down,1*";
         source: "sb_hbar_p1";
         action: DRAG_VAL_PAGE -1.0 0.0;
         target: "elm.dragable.hbar";
      }
      program {
         name: "horizontal_scroll_up";
         signal: "mouse,down,1*";
         source: "sb_hbar_p2";
         action: DRAG_VAL_PAGE  1.0 0.0;
         target: "elm.dragable.hbar";
      }

      part { name: "bg";
         type: IMAGE;
         description { state: "default" 0.0;
            image.normal: "section-item-bg.png";
            image.border: 0 0 2 2;
            rel1.to: "elm.swallow.background";
            rel2.to: "elm.swallow.background";
//            color: 64 64 64 200;
            color_class: "scrollframe_base";
         }
      }
      part { name: "clipper";
         type: RECT;
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.background";
            rel2.to: "elm.swallow.background";
         }
      }
      part { name: "elm.swallow.background";
         type: SWALLOW;
         clip_to: "clipper";
         description { state: "default" 0.0;
            rel2 {
               relative: 0.0 0.0;
               to_x: "sb_vbar";
               to_y: "sb_hbar";
            }
         }
      }
     part { name: "elm.swallow.content";
         type: SWALLOW;
         clip_to: "clipper";
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.background";
            rel2.to: "elm.swallow.background";
         }
      }
      part { name: "elm.swallow.overlay";
         type: SWALLOW;
         clip_to: "clipper";
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
         }
      }
/* FIXME: make bg fo bar is area-dark.png */
      part { name: "runner_vbar";
         mouse_events: 0;
         clip_to: "sb_vbar_show";
         description { state: "default" 0.0;
            fixed: 1 1;
            image {
               normal: "scroll-area-dark.png";
               border: 2 2 2 2;
            }
            fill.smooth: 0;
            min: 8 8;
            max: 8 -1;
            rel1.to: "sb_vbar_base";
            rel2.to: "sb_vbar_base";
        }
      }
      part { name: "runner_hbar";
         mouse_events: 0;
         clip_to: "sb_hbar_show";
         description { state: "default" 0.0;
            fixed: 1 1;
            image {
               normal: "scroll-area-dark.png";
               border: 2 2 2 2;
            }
            fill.smooth: 0;
            min: 8 8;
            max: -1 8;
            rel1.to: "sb_hbar_base";
            rel2.to: "sb_hbar_base";
        }
      }
      part { name: "base_vbar";
         mouse_events: 0;
         clip_to: "sb_vbar_show";
         description { state: "default" 0.0;
            fixed: 1 0;
            min: 8 8;
            max: 8 -1;
            image {
               normal: "scroll-indicator.png";
               border: 2 2 2 2;
            }
            fill.smooth: 0;
            rel1 {
               offset: 2 0;
               to: "elm.dragable.vbar";
            }
            rel2 {
               offset: -3 -1;
               to: "elm.dragable.vbar";
            }
         }
      }
      part { name: "base_hbar";
         mouse_events: 0;
         clip_to: "sb_hbar_show";
         description { state: "default" 0.0;
            fixed: 0 1;
            image {
               normal: "scroll-indicator.png";
               border: 2 2 2 2;
            }
            fill.smooth: 0;
            min: 8 8;
            max: -1 8;
            rel1 {
               offset: 0 2;
               to: "elm.dragable.hbar";
            }
            rel2 {
               offset: -1 -3;
               to: "elm.dragable.hbar";
            }
         }
      }
   }
   programs {
      program {
         signal: "mouse,down,1*"; source: "elm.dragable.vbar";
         action: STATE_SET "clicked" 0.0;
         target: "elm.dragable.vbar";
      }
      program {
         signal: "mouse,up,1"; source: "elm.dragable.vbar";
         action: STATE_SET "default" 0.0;
         target: "elm.dragable.vbar";
      }
      program {
         signal: "mouse,down,1*"; source: "elm.dragable.hbar";
         action: STATE_SET "clicked" 0.0;
         target: "elm.dragable.hbar";
      }
      program {
         signal: "mouse,up,1"; source: "elm.dragable.hbar";
         action: STATE_SET "default" 0.0;
         target: "elm.dragable.hbar";
      }
   }
}

group { name: "elm/genlist/base/eflete/dark";
      inherit: "elm/genlist/base/eflete/default";
   images {
      image: "treemenu-background.png" COMP;
      image: "border_1.png" COMP;
   }
   parts {
      part { name: "bg";
         description { state: "default" 0.0;
            image {
               normal: "treemenu-background.png";
               border: 2 2 2 2;
            }
            rel1.to: "elm.swallow.background";
            rel2.to: "elm.swallow.background";
         }
      }
      part { name: "content_border";
         mouse_events: 0;
         description {
            align: 1.0 1.0;
            image {
               normal: "border_1.png";
               border: 1 1 1 1;
            }
            color: LIST_BORDER_COLOR;
         }
      }
   }
}

group { name: "elm/genlist/base/eflete/usage_list";
   inherit: "elm/genlist/base/eflete/default";
   parts {
      part { name: "bg";
         type: RECT;
         description { state: "default" 0.0;
            color: 46 48 49 255;
         }
      }
   }
}

#undef ITEM_HEIGHT
#ungef BORDER_COLOR
#undef LIST_BORDER_COLOR
#undef LIST_ITEM_SELECTED_COLOR
#undef LIGHT_BORDER_COLOR
#undef BG_COLOR
