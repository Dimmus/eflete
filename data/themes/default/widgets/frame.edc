group { name: "elm/frame/base/eflete/default";
   images {
      image: "section-item-bg.png" COMP;
      image: "section-header-bg.png" COMP;
      image: "icon-group-expand.png" COMP;
      image: "icon-group-minimize.png" COMP;
      image: "group-border-bg.png" COMP;
      image: "group-border-head.png" COMP;
   }
   parts {
      part { name: "base";
         type: IMAGE;
         description { state: "default" 0.0;
            rel2.offset: -3 -3;
            image.normal: "section-item-bg.png";
            visible: 0;
            fill.smooth: 0;
            color: 255 255 255 255;
            rel1 {
               relative: 0.0 1.0;
               offset: 2 0;
               to_y: "top";
            }
         }
      }
      part { name: "top";
         description { state: "default" 0.0;
            visible: 0;
            image.normal: "section-header-bg.png";
            fill.smooth: 0;
            rel1.offset: 2 2;
            rel2 {
               to_y: "elm.text";
               offset: -3 -1;
            }
         }
      }
      part { name: "edge1";
         description { state: "default" 0.0;
            image.normal: "icon-group-minimize.png";
            align: 0.0 0.5;
            FIXED_SIZE(6, 6)
            rel1 {
               offset: 15 0;
               to_y: "elm.text";
            }
            rel2 {
               offset: 4 -1;
               relative: 0.0 1.0;
               to_y: "elm.text";
            }
         }
         description { state: "collapsed" 0.0;
            inherit: "default" 0.0;
            image.normal: "icon-group-expand.png";
         }
      }
      part { name: "elm.text";
         type: TEXT;
         scale: 1;
         effect: SHADOW BOTTOM;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            color: FN_COL_DEFAULT;
            color_class: "frame";
            min: 100 0;
            max: 150 -1;
            text {
               font: FNBD;
               size: 12;
               text_class: "frame";
               align: 0.0 0.0;
               min: 1 1;
            }
            fixed: 1 1;
            rel1 {
               relative: 1.0 0.0;
               offset: 10 2;
               to_x: "edge1";
            }
            rel2 {
               relative: 1.0 0.0;
               offset: -2 2;
               to_x: "bevel";
            }
         }
      }
      part { name: "clip";
         type: RECT;
         description { state: "default" 0.0;
            rel1 {
               relative: 0.0 1.0;
               offset: 5 0;
               to_y: "elm.text";
            }
            rel2.offset: -6 -6;
         }
      }
      part { name: "elm.swallow.content"; type: SWALLOW;
         clip_to: "clip";
         description { state: "default" 0.0;
            align: 0.0 1.0;
            rel1 {
               relative: 0.0 1.0;
               offset: 5 0;
               to_y: "elm.text";
            }
            rel2.offset: -6 -6;
         }
         description { state: "collapsed" 0.0;
            inherit: "default" 0.0;
            minmul: 1.0 0.01;
         }
      }
      part { name: "elm.swallow.icon";
         type: SWALLOW;
         clip_to: "clip";
         description { state: "default" 0.0;
            rel1 {
               relative: 0.0 1.0;
               to_x: "bevel";
               to_y: "elm.text";
            }
            rel2 {
               to_x: "edge1";
               to_y: "elm.text";
            }
         }
      }
      part { name: "bevel_top";
         mouse_events: 0;
         description { state: "default" 0.0;
            min: 0 1;
            align: 1.0 0.0;
            image.normal: "group-border-head.png";
            rel1 {
               to_x: "elm.text";
               to_y: "bevel";
               offset: 0 0;
               relative: 1.0 0.0;
            }
            rel2 {
               to_x: "bevel";
               to_y: "bevel";
               offset: -2 0;
               relative: 1.0 0.0;
            }
         }
      }
      part { name: "bevel";
         mouse_events: 0;
         description { state: "default" 0.0;
            image {
               normal: "group-border-bg.png";
               border: 3 3 3 4;
               middle: 0;
            }
            fill.smooth: 0;
            rel1 {
               to: "top";
               offset: 2 2;
               relative: 0.0 0.5;
            }
            rel2.offset: -3 -3;
         }
      }
      part { name: "event";
         type: RECT;
         ignore_flags: ON_HOLD;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.to_y: "elm.text";
            rel2.to_y: "elm.text";
         }
      }
   }
   programs {
      program {
         name: "collapse";
         action:  STATE_SET "collapsed" 0.0;
         target: "elm.swallow.content";
         target: "edge1";
         transition: ACCELERATE 0.3;
         after: "signal";
      }
      program {
         name: "expand";
         action:  STATE_SET "default" 0.0;
         target: "elm.swallow.content";
         target: "edge1";
         transition: DECELERATE 0.3;
         after: "signal";
      }
      program {
         name: "mouse_up_event";
         signal: "mouse,up,1";
         source: "event";
         action:  SIGNAL_EMIT "elm,action,click" "elm";
      }
      program {
         name: "action_toggle";
         signal: "elm,action,toggle";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "default"))
              run_program(PROGRAM:"collapse");
            else
              run_program(PROGRAM:"expand");
         }
      }
      program {
         name: "action_switch";
         signal: "elm,action,switch";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "default"))
              set_state(PART:"elm.swallow.content", "collapsed", 0.0);
            else
              set_state(PART:"elm.swallow.content", "default", 0.0);
         }
      }
      program {
         name: "signal";
         action: SIGNAL_EMIT "elm,anim,done" "elm";
      }
   }
}

