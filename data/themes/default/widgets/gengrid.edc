#define BORDER_PADDING 5 5
group { name: "elm/gengrid/item/eflete/default/default";
   data.item: "texts" "elm.text";
   data.item: "contents" "elm.swallow.icon elm.swallow.end";
   images {
      image: "gallery-overlay.png" COMP;
      image: "image_border.png" COMP;
   }
   parts {
      part { name: "spacer1";
         type: SPACER;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            min: 2 2;
            max: 2 2;
         }
      }
      part { name: "spacer2";
         type: SPACER;
         description { state: "default" 0.0;
            align: 1.0 1.0;
            min: 2 2;
            max: 2 2;
         }
      }
      part { name: "highlight";
         type: RECT;
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1 {
               relative: 1.0 1.0;
               to: "spacer1";
            }
            rel2 {
               relative: 0.0 0.0;
               to: "spacer2";
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: HIGHLIGHT_TOOLBAR_BLUE;
         }
      }
      part { name: "elm.swallow.pad";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.0 1.0;
            min: 0 2;
            rel1 {
               relative: 1.0  0.0;
               to_x: "spacer1";
               to_y: "spacer2";
            }
            rel2 {
               relative: 1.0  0.0;
               to_x: "spacer1";
               to_y: "elm.text";
            }
         }
      }
      part { name: "icon_border";
         type:IMAGE;
         description { state: "default" 0.0;
            image {
               normal: "image_border.png";
               border: 1 1 1 1;
               middle: 0;
            }
            rel1 {
               relative: 1.0 1.0;
               to: "spacer1";
            }
            rel2 {
               relative: 1.0 0.0;
               to_y: "elm.text";
            }
         }
      }
      part { name: "spacer_border_top";
         type: SPACER;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            SET_SIZE(BORDER_PADDING, BORDER_PADDING);
            rel1.to: "icon_border";
            rel2.to: "icon_border";
         }
      }
      part { name: "spacer_border_bottom";
         type: SPACER;
         description { state: "default" 0.0;
            align: 1.0 1.0;
            SET_SIZE(BORDER_PADDING, BORDER_PADDING);
            rel1.to: "icon_border";
            rel2.to: "icon_border";
         }
      }
      part { name: "elm.swallow.icon";
         clip_to: "disclip";
         repeat_events: 1;
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.5 0.5;
            rel1 {
               to: "spacer_border_top";
               relative: 1.0 1.0;
            }
            rel2 {
               to: "spacer_border_bottom";
               relative: 0.0 0.0;
            }
         }
      }
      part { name: "elm.swallow.end";
         clip_to: "disclip";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 1.0 0.0;
            aspect: 1.0 1.0;
            aspect_preference: HORIZONTAL;
            max: 24 24;
            rel1 {
               to: "spacer_border_top";
               relative: 1.0 1.0;
            }
            rel2 {
               to: "spacer_border_bottom";
               relative: 0.0 0.0;
            }
         }
      }
      part { name: "elm.text";
         clip_to: "disclip";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            align: 1.0 1.0;
            rel1 {
               relative: 0.0  0.0;
               to_x: "icon_border";
               to_y: "text_bottom";
               offset: 2 0;
            }
            rel2 {
               relative: 1.0  0.0;
               to_x: "icon_border";
               to_y: "text_bottom";
               offset: -2 0;
            }
            color: FN_COL_LIGHT_GREY;
            text {
               font: FN;
               size: 11;
               min: 0 1;
               align: 0.5 1.0;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            color: FN_COL_DEFAULT;
         }
      }
      part { name: "text_bottom";
         type: SPACER;
         description { state: "default" 0.0;
            min: 2 2;
            max: 2 2;
            align: 1.0 1.0;
            rel2 {
               relative: 0.0  0.0;
               to: "spacer2";
            }
         }
      }
      part { name: "fg2";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            rel1.to: "highlight";
            rel2.to: "highlight";
            image {
               normal: "gallery-overlay.png";
               border: 2 2 2 2;
           }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "event";
         type: RECT;
         repeat_events: 0;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "disclip";
         type: RECT;
         repeat_events: 1;
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "highlight";
            rel2.to: "highlight";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 0;
         }
      }
   }
   programs {
      program {
         name:    "go_active";
         signal:  "elm,state,selected";
         source:  "elm";
         action:  STATE_SET "selected" 0.0;
         target:  "fg2";
         target:  "highlight";
         target:  "elm.text";
         transition: ACCELERATE 0.1;
      }
      program {
         name:    "go_passive";
         signal:  "elm,state,unselected";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "fg2";
         target:  "elm.text";
         target:  "highlight";
         transition: ACCELERATE 0.2;
      }
      program {
         name:    "go_disabled";
         signal:  "elm,state,disabled";
         source:  "elm";
         action:  STATE_SET "disabled" 0.0;
         target:  "disclip";
      }
      program {
         name:    "go_enabled";
         signal:  "elm,state,enabled";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "disclip";
      }
   }
}
#undef BORDER_PADDING
#define GROUP_INDEX_H 25
#define GROUP_INDEX_COLOR 9 130 194 255
#define GROUP_INDEX_BG_COLOR 48 48 48 180

group { "elm/gengrid/item/group_index/eflete/default";
   images.image: "group_index_decoration.png" COMP;
   data.item: "texts" "elm.text";
   parts {
      part { name: "left_spacer";
         type: SPACER;
         description { state: "default" 0.0;
            SET_SIZE(4, GROUP_INDEX_H);
            align: 0.0 0.0;
         }
      }
      part { name: "right_spacer";
         type: SPACER;
         description { state: "default" 0.0;
            SET_SIZE(4, GROUP_INDEX_H);
            align: 1.0 1.0;
         }
      }
      part { name: "base_bar";
         type: RECT;
         description { state: "default" 0.0;
            color: GROUP_INDEX_BG_COLOR;
            min: 5 GROUP_INDEX_H;
            rel1 {
               relative: 1.0 0.0;
               to: "left_spacer";
            }
            rel2 {
               relative: 0.0 1.0;
               to: "right_spacer";
            }
         }
      }
      part { name: "left_deco";
         description { state: "default" 0.0;
            color: GROUP_INDEX_COLOR;
            image.normal: "group_index_decoration.png";
            align: 0.0 0.5;
            SET_SIZE(GROUP_INDEX_H, 2);
            rel1.to: "base_bar";
            rel2.to: "base_bar";
         }
      }
      part { name: "left_text_spacer";
         type: SPACER;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            SET_SIZE(5, 2);
            rel1 {
               relative: 1.0 0.0;
               to: "left_deco";
            }
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         scale: 1;
         description { state: "default" 0.0;
            color: GROUP_INDEX_COLOR;
            align: 0.0 0.5;
            max: 70 20;
            text {
               align: 0.0 0.5;
               style: "eflete_header_textblock_style";
               max: 1 1;
            }
            rel1 {
               to_x: "left_text_spacer";
               relative: 1.0 0.0;
            }
         }
      }
      part { name: "right_text_spacer";
         type: SPACER;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            SET_SIZE(5, 2);
            rel1 {
               relative: 1.0 0.0;
               to: "elm.text";
            }
         }
      }

      part { name: "right_deco";
         description { state: "default" 0.0;
            color: GROUP_INDEX_COLOR;
            image.normal: "group_index_decoration.png";
            align: 1.0 0.5;
            min: GROUP_INDEX_H 2;
            max: -1 2;
            rel1 {
               to_x: "right_text_spacer";
               relative: 1.0 0.0;
            }
            rel2.to: "base_bar";
         }
      }
   }
}

#undef GROUP_INDEX_H
#undef GROUP_INDEX_COLOR
#undef GROUP_INDEX_BG_COLOR

group { name: "elm/gengrid/base/eflete/default";
   images {
      image: "scroll-indicator.png" COMP;
      image: "scroll-area-dark.png" COMP;
      image: "section-item-bg.png" COMP;
   }
   data.item: "focus_highlight" "on";

   parts {
      program {
         name: "reload_on_load";
         signal: "load"; source: "";
         script {
            emit("reload", "elm");
         }
      }
      part { name: "bg";
         type: IMAGE;
         description { state: "default" 0.0;
            image.normal: "section-item-bg.png";
            image.border: 0 0 2 2;
            rel1.to: "elm.swallow.background";
            rel2.to: "elm.swallow.background";
            color_class: "scrollframe_base";
         }
      }
      part { name: "clipper";
         type: RECT;
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.background";
            rel2.to: "elm.swallow.background";
         }
      }
      part { name: "elm.swallow.background";
         type: SWALLOW;
         clip_to: "clipper";
         description { state: "default" 0.0;
            rel1.offset: 1 1;
            rel2 {
               relative: 1.0 1.0;
               offset: 0 0;
               to_x: "sb_vbar";
               to_y: "sb_hbar";
            }
         }
      }
      part { name: "content_clipper";
         type: RECT;
         description { state: "default" 0.0;
            rel1.offset: 1 1;
            rel2 {
               relative: 0.0 0.0;
               offset: -2 -2;
               to_x: "sb_vbar";
               to_y: "sb_hbar";
            }
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         clip_to: "content_clipper";
         description { state: "default" 0.0;
            rel1.to: "content_clipper";
            rel2.to: "content_clipper";
         }
      }
      part { name: "elm.swallow.overlay";
         type: SWALLOW;
         clip_to: "content_clipper";
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
         }
      }
// vert bar ////////////////////////////////////////////////////////////////
      part { name: "sb_vbar_show";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            rel1.offset: -11 -11;
            rel2.offset: 10 10;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "sb_vbar";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 0;
            min: 8 8;
            align: 1.0 0.0;
            rel1 {
               relative: 1.0 0.0;
               offset: -1 2;
            }
            rel2 {
               relative: 1.0 0.0;
               to_y: "sb_hbar";
               offset: -1 -1;
            }
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            max: 0 -1;
         }
      }
      part { name: "sb_vbar_base";
         type: RECT;
         clip_to: "sb_vbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1 {
               relative: 0.0 0.0;
               to: "sb_vbar";
            }
            rel2 {
               relative: 1.0 1.0;
               to: "sb_vbar";
            }
         }
      }

      part { name: "sb_vbar_p1";
         type: RECT;
         clip_to: "sb_vbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1 {
               relative: 0.0 0.0;
               to: "sb_vbar";
            }
            rel2 {
               relative: 1.0 0.0;
               to: "elm.dragable.vbar";
            }
         }
      }
      part { name: "sb_vbar_p2";
         type: RECT;
         clip_to: "sb_vbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1 {
               relative: 0.0 1.0;
               to: "elm.dragable.vbar";
            }
            rel2 {
               relative: 1.0 1.0;
               to: "sb_vbar";
            }
         }
      }
      part { name: "elm.dragable.vbar";
         type: RECT;
         clip_to: "sb_vbar";
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 8 8;
            max: 8 -1;
            rel1 {
               relative: 0.5  0.5;
               to: "sb_vbar_base";
            }
            rel2 {
               relative: 0.5  0.5;
               to: "sb_vbar_base";
               offset: 0 -1;
            }
            color: 0 0 0 0;
         }
         dragable {
            x: 0 0 0;
            y: 1 1 0;
            confine: "sb_vbar_base";
         }
      }
      program {
         name: "show_vertical_scroll";
         signal: "elm,action,show,vbar";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "sb_vbar";
         target: "sb_vbar_show";
      }
      program {
         name: "hide_vertical_scroll";
         signal: "elm,action,hide,vbar";
         source: "elm";
         action: STATE_SET "hidden" 0.0;
         target: "sb_vbar";
         target: "sb_vbar_show";
      }
      program {
         name: "vertical_scroll_down";
         signal: "mouse,down,1*";
         source: "sb_vbar_p1";
         action: DRAG_VAL_PAGE 0.0 -1.0;
         target: "elm.dragable.vbar";
      }
      program {
         name: "vertical_scroll_up";
         signal: "mouse,down,1*";
         source: "sb_vbar_p2";
         action: DRAG_VAL_PAGE  0.0 1.0;
         target: "elm.dragable.vbar";
      }

// horiz bar /////////////////////////////////////////////////////////////
      part { name: "sb_hbar_show";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            rel1.offset: -11 -11;
            rel2.offset: 10 10;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "sb_hbar";
         type: RECT;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 0 1;
            min: 8 8;
            align: 0.0 1.0;
            rel1 {
               relative: 0.0 1.0;
               offset: 1 0;
            }
            rel2 {
               relative: 0.0 1.0;
               to_x: "sb_vbar";
               offset: -1 -2;
            }
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            max: -1 0;
         }
      }
      part { name: "sb_hbar_base";
         type: RECT;
         clip_to: "sb_hbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1 {
               relative: 0.0 0.0;
               to: "sb_hbar";
            }
            rel2 {
               relative: 1.0 1.0;
               to: "sb_hbar";
               offset: -1 0;
            }
         }
      }
      part { name: "sb_hbar_p1";
         type: RECT;
         clip_to: "sb_hbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1 {
               relative: 0.0 0.0;
               to: "sb_hbar";
            }
            rel2 {
               relative: 0.0 1.0;
               to: "elm.dragable.hbar";
            }
         }
      }
      part { name: "sb_hbar_p2";
         type: RECT;
         clip_to: "sb_hbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1 {
               relative: 1.0 0.0;
               to: "elm.dragable.hbar";
            }
            rel2 {
               relative: 1.0 1.0;
               to: "sb_hbar";
            }
         }
      }
      part { name: "elm.dragable.hbar";
         type: RECT;
         clip_to: "sb_hbar";
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 8 8;
            max: -1 8;
            color: 0 0 0 0;
            rel1 {
               relative: 0.5  0.5;
               to: "sb_hbar_base";
            }
            rel2 {
               relative: 0.5  0.5;
               to: "sb_hbar_base";
               offset: -1 0;
            }
         }
         dragable {
            x: 1 1 0;
            y: 0 0 0;
            confine: "sb_hbar_base";
         }
      }

      program {
         name: "show_horizontal_scroll";
         signal: "elm,action,show,hbar";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "sb_hbar";
         target: "sb_hbar_show";
      }
      program {
         name: "hide_horizontal_scroll";
         signal: "elm,action,hide,hbar";
         source: "elm";
         action: STATE_SET "hidden" 0.0;
         target: "sb_hbar";
         target: "sb_hbar_show";
      }
      program {
         name: "horizontal_scroll_down";
         signal: "mouse,down,1*";
         source: "sb_hbar_p1";
         action: DRAG_VAL_PAGE -1.0 0.0;
         target: "elm.dragable.hbar";
      }
      program {
         name: "horizontal_scroll_up";
         signal: "mouse,down,1*";
         source: "sb_hbar_p2";
         action: DRAG_VAL_PAGE  1.0 0.0;
         target: "elm.dragable.hbar";
      }


      /* FIXME: make bg fo bar is area-dark.png */
      part { name: "runner_vbar";
         mouse_events: 0;
         clip_to: "sb_vbar_show";
         description { state: "default" 0.0;
            fixed: 1 1;
            image {
               normal: "scroll-area-dark.png";
               border: 2 2 2 2;
            }
            fill.smooth: 0;
            min: 8 8;
            max: 8 -1;
            rel1.to: "sb_vbar_base";
            rel2 {
               to: "sb_vbar_base";
               offset: 0 -1;
            }
        }
      }
      part { name: "runner_hbar";
         mouse_events: 0;
         clip_to: "sb_hbar_show";
         description { state: "default" 0.0;
            fixed: 1 1;
            image {
               normal: "scroll-area-dark.png";
               border: 2 2 2 2;
            }
            fill.smooth: 0;
            min: 8 8;
            max: -1 8;
            rel1.to: "sb_hbar_base";
            rel2 {
               to: "sb_hbar_base";
               offset: 0 0;
            }
        }
      }
      part { name: "base_vbar";
         mouse_events: 0;
         clip_to: "sb_vbar_show";
         description { state: "default" 0.0;
            fixed: 1 0;
            min: 8 8;
            max: 8 -1;
            image {
               normal: "scroll-indicator.png";
               border: 2 2 2 2;
            }
            fill.smooth: 0;
            rel1 {
               offset: 0 0;
               to: "elm.dragable.vbar";
            }
            rel2 {
               offset: 0 -1;
               to: "elm.dragable.vbar";
            }
         }
      }
      part { name: "base_hbar";
         mouse_events: 0;
         clip_to: "sb_hbar_show";
         description { state: "default" 0.0;
            fixed: 0 1;
            image {
               normal: "scroll-indicator.png";
               border: 2 2 2 2;
            }
            fill.smooth: 0;
            min: 8 8;
            max: -1 8;
            rel1 {
               offset: 0 0;
               to: "elm.dragable.hbar";
            }
            rel2 {
               offset: 0 -1;
               to: "elm.dragable.hbar";
            }
         }
      }
   }
   programs {
      program {
         signal: "mouse,down,1*"; source: "elm.dragable.vbar";
         action: STATE_SET "clicked" 0.0;
         target: "elm.dragable.vbar";
      }
      program {
         signal: "mouse,up,1"; source: "elm.dragable.vbar";
         action: STATE_SET "default" 0.0;
         target: "elm.dragable.vbar";
      }
      program {
         signal: "mouse,down,1*"; source: "elm.dragable.hbar";
         action: STATE_SET "clicked" 0.0;
         target: "elm.dragable.hbar";
      }
      program {
         signal: "mouse,up,1"; source: "elm.dragable.hbar";
         action: STATE_SET "default" 0.0;
         target: "elm.dragable.hbar";
      }
   }
}
