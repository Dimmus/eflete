group { name: "elm/menu/item/default";
   parts {
      part { name: "base";
         type: SPACER;
         description { state: "default" 0.0;
            min: 0 21;
            max: -1 21;
            rel1 {
               offset: 1 1;
            }
            rel2 {
               offset: -2 -2;
            }
         }
      }
      part { name: "highlight";
         type: RECT;
         description { state: "default" 0.0;
            visible: 0;
            color: MENU_HIGHLIGHT_COLOR;
            rel1 {
               to: "base";
            }
            rel2 {
               to: "base";
            }
         }
         description { state: "selected" 0.0;
            color: MENU_HIGHLIGHT_COLOR;
            rel1 {
               to: "base";
            }
            rel2 {
               to: "base";
            }
         }
      }
      part { name: "area.content";
         type: SPACER;
         description { state: "default" 0.0;
            align: 0.0 0.5;
            min: 32 0;
            max: 32 -1;
            rel1 {
               to: "base";
            }
            rel2 {
               to: "base";
            }
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         clip_to: "clipper.content";
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 16 16;
            max: 16 16;
            rel1 {
               to: "area.content";
            }
            rel2 {
               to: "area.content";
            }
         }
      }
      part { name: "padding.right";
         type: SPACER;
         description { state: "default" 0.0;
            align: 1.0 0.5;
            min: 8 0;
            max: 8 -1;
            rel1 {
               to: "base";
            }
            rel2 {
               to: "base";
            }
         }
      }
      part { name: "elm.text";
         type: TEXT;
         clip_to: "clipper.text";
         description { state: "default" 0.0;
            rel1 {
               relative: 1.0 0.0;
               to_x: "area.content";
               to_y: "base";
            }
            rel2 {
               relative: 0.0 1.0;
               to_x: "padding.text";
               to_y: "base";
            }
            text {
               font: "PT";
               size: 12;
               min: 1 1;
               align: 0.0 0.5;
               ellipsis: -1.0;
            }
         }
      }
      part { name: "padding.text";
         type: SPACER;
         description { state: "default" 0.0;
            align: 1.0 0.5;
            min: 16 0;
            max: 16 -1;
            rel1 {
               to: "base";
            }
            rel2 {
               relative: 0.0 1.0;
               to_x: "elm.shortcut";
               to_y: "base";
            }
         }
      }
      part { name: "elm.shortcut";
         type: TEXT;
         clip_to: "clipper.shortcut";
         description { state: "default" 0.0;
            align: 1.0 0.5;
            rel1 {
               to: "base";
            }
            rel2 {
               relative: 0.0 1.0;
               to_x: "padding.right";
               to_y: "base";
            }
            text {
               font: "Sans";
               size: 12;
               min: 1 1;
               max: 1 0;
               ellipsis: -1.0;
            }
         }
      }
      part { name: "clipper.content";
         type: RECT;
         description { state: "default" 0.0;
            color: MENU_ICON_COLOR;
            rel1 {
               to: "area.content";
            }
            rel2 {
               to: "area.content";
            }
         }
         description { state: "disabled" 0.0;
            color: MENU_ICON_DISABLE_COLOR;
            rel1 {
               to: "area.content";
            }
            rel2 {
               to: "area.content";
            }
         }
         description { state: "selected" 0.0;
            color: MENU_ICON_FOCUSED_COLOR;
            rel1 {
               to: "area.content";
            }
            rel2 {
               to: "area.content";
            }
         }
      }
      part { name: "clipper.text";
         type: RECT;
         description { state: "default" 0.0;
            color: MENU_TEXT_COLOR;
            rel1 {
               relative: 1.0 0.0;
               to_x: "area.content";
               to_y: "base";
            }
            rel2 {
               to_x: "padding.text";
               to_y: "base";
            }
         }
         description { state: "disabled" 0.0;
            color: MENU_TEXT_DISABLED_COLOR;
            rel1 {
               relative: 1.0 0.0;
               to_x: "area.content";
               to_y: "base";
            }
            rel2 {
               to: "base";
            }
         }
      }
      part { name: "clipper.shortcut";
         type: RECT;
         description { state: "default" 0.0;
            color: MENU_SHORTCUT_COLOR;
            rel1 {
               to_x: "elm.shortcut";
               to_y: "base";
            }
            rel2 {
               to: "base";
            }
         }
         description { state: "selected" 0.0;
            color: MENU_SHORTCUT_DISABLE_COLOR;
            rel1 {
               to_x: "elm.shortcut";
               to_y: "base";
            }
            rel2 {
               to: "base";
            }
         }
      }
      part { name: "event";
         type: RECT;
         ignore_flags: "ON_HOLD";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1 {
               to: "base";
            }
            rel2 {
               to: "base";
            }
         }
         description { state: "disabled" 0.0;
            visible: 0;
            color: 0 0 0 0;
            rel1 {
               to: "base";
            }
            rel2 {
               to: "base";
            }
         }
      }
   }
   programs {
      program { name: "highlighted";
         signal: "mouse,in";
         source: "event";
         action: STATE_SET "selected" 0.00;
         target: "highlight";
         target: "clipper.content";
         target: "clipper.shortcut";
         after: "activate";
      }
      program { name: "unhighlighted";
         signal: "mouse,out";
         source: "event";
         action: STATE_SET "default" 0.00;
         target: "highlight";
         target: "clipper.content";
         target: "clipper.shortcut";
      }
      program { name: "disabled";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.00;
         target: "clipper.content";
         target: "clipper.text";
         target: "event";
      }
      program { name: "enabled";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.00;
         target: "clipper.content";
         target: "clipper.text";
         target: "event";
      }
      program { name: "clicked";
         signal: "mouse,up,1";
         source: "event";
         action: SIGNAL_EMIT "elm,action,click" "elm";
         after: "inactivate";
      }
      program { name: "open";
         signal: "mouse,in";
         source: "event";
         action: SIGNAL_EMIT "elm,action,open" "elm";
      }
      program { name: "inactivate";
         action: SIGNAL_EMIT "elm,action,inactivate" "elm";
      }
      program { name: "activate";
         action: SIGNAL_EMIT "elm,action,activate" "elm";
      }
   }
}

group { name: "elm/menu/item_with_submenu/default";
   images {
      image: "context_menu-arrow.png" COMP;
   }
   parts {
      part { name: "base";
         type: SPACER;
         description { state: "default" 0.0;
            min: 0 21;
            max: -1 21;
            rel1 {
               offset: 1 1;
            }
            rel2 {
               offset: -2 -2;
            }
         }
      }
      part { name: "highlight";
         type: RECT;
         description { state: "default" 0.0;
            visible: 0;
            color: MENU_HIGHLIGHT_COLOR;
            rel1 {
               to: "base";
            }
            rel2 {
               to: "base";
            }
         }
         description { state: "selected" 0.0;
            color: MENU_HIGHLIGHT_COLOR;
            rel1 {
               to: "base";
            }
            rel2 {
               to: "base";
            }
         }
      }
      part { name: "area.content";
         type: SPACER;
         description { state: "default" 0.0;
            align: 0.0 0.5;
            min: 32 0;
            max: 32 -1;
            rel1 {
               to: "base";
            }
            rel2 {
               to: "base";
            }
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         clip_to: "clipper.content";
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 16 16;
            max: 16 16;
            rel1 {
               to: "area.content";
            }
            rel2 {
               to: "area.content";
            }
         }
      }
      part { name: "padding.right";
         type: SPACER;
         description { state: "default" 0.0;
            align: 1.0 0.5;
            min: 8 0;
            max: 8 -1;
            rel1 {
               to: "base";
            }
            rel2 {
               to: "base";
            }
         }
      }
      part { name: "elm.text";
         type: TEXT;
         clip_to: "clipper.text";
         description { state: "default" 0.0;
            rel1 {
               relative: 1.0 0.0;
               to_x: "area.content";
               to_y: "base";
            }
            rel2 {
               relative: 0.0 1.0;
               to_x: "padding.text";
               to_y: "base";
            }
            text {
               font: FN;
               size: 12;
               align: 0.0 0.5;
               min: 1 1;
               ellipsis: -1;
            }
         }
      }
      part { name: "arrow";
         type: IMAGE;
         clip_to: "clipper.text";
         description { state: "default" 0.0;
            align: 1.0 0.5;
            min: 4 4;
            max: 4 6;
            rel1 {
               to: "base";
            }
            rel2 {
               relative: 0.0 1.0;
               to_x: "padding.right";
               to_y: "base";
            }
            image {
               normal: "context_menu-arrow.png";
               middle: DEFAULT;
            }
         }
      }
      part { name: "padding.text";
         type: SPACER;
         description { state: "default" 0.0;
            align: 1.0 0.5;
            min: 16 0;
            max: 16 -1;
            rel1 {
               to: "base";
            }
            rel2 {
               relative: 0.0 1.0;
               to_x: "arrow";
               to_y: "base";
            }
         }
      }
      part { name: "clipper.content";
         type: RECT;
         description { state: "default" 0.0;
            color: MENU_ICON_COLOR;
            rel1 {
               to: "area.content";
            }
            rel2 {
               to: "area.content";
            }
         }
         description { state: "selected" 0.0;
            color: MENU_ICON_FOCUSED_COLOR;
            rel1 {
               to: "area.content";
            }
            rel2 {
               to: "area.content";
            }
         }
         description { state: "disabled" 0.0;
            color: MENU_ICON_DISABLE_COLOR;
            rel1 {
               to: "area.content";
            }
            rel2 {
               to: "area.content";
            }
         }
      }
      part { name: "clipper.text";
         type: RECT;
         description { state: "default" 0.0;
            color: MENU_TEXT_COLOR;
            rel1 {
               relative: 1.0 0.0;
               to_x: "area.content";
               to_y: "base";
            }
            rel2 {
               to: "base";
            }
         }
         description { state: "disabled" 0.0;
            color: MENU_TEXT_DISABLED_COLOR;
            rel1 {
               relative: 1.0 0.0;
               to_x: "area.content";
               to_y: "base";
            }
            rel2 {
               to: "base";
            }
         }
      }
      part { name: "event";
         type: RECT;
         ignore_flags: "ON_HOLD";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1 {
               to: "base";
            }
            rel2 {
               to: "base";
            }
         }
         description { state: "disabled" 0.0;
            visible: 0;
            color: 0 0 0 0;
            rel1 {
               to: "base";
            }
            rel2 {
               to: "base";
            }
         }
      }
   }
   programs {
      program { name: "highlighted";
         signal: "mouse,in";
         source: "event";
         action: STATE_SET "selected" 0.00;
         target: "highlight";
         target: "clipper.content";
         after: "activate";
      }
      program { name: "unhighlighted";
         signal: "mouse,out";
         source: "event";
         action: STATE_SET "default" 0.00;
         target: "highlight";
         target: "clipper.content";
      }
      program { name: "disabled";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.00;
         target: "clipper.content";
         target: "clipper.text";
         target: "event";
      }
      program { name: "enabled";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.00;
         target: "clipper.content";
         target: "clipper.text";
         target: "event";
      }
      program { name: "clicked";
         signal: "mouse,up,1";
         source: "event";
         action: SIGNAL_EMIT "elm,action,click" "elm";
         after: "inactivate";
      }
      program { name: "inactivate";
        action: SIGNAL_EMIT "elm,action,inactivate" "elm";
      }
      program { name: "activate";
        action: SIGNAL_EMIT "elm,action,activate" "elm";
      }
      program { name: "open";
         signal: "mouse,in";
         source: "event";
         action: SIGNAL_EMIT "elm,action,open" "elm";
      }
   }
}

group { name: "elm/menu/separator/default";
   images {
      image: "context_menu-separator.png" COMP;
   }
   parts {
      part { name: "separator";
         description { state: "default" 0.0;
            min: 0 2;
            max: -1 2;
            rel1.offset: 1 0;
            rel2.offset: -2 0;
            image.normal: "context_menu-separator.png";
            fill.smooth: 0;
         }
      }
   }
}

group { name: "elm/menu/main_menu_submenu/default";
   parts {
      part { name: "base";
         mouse_events: 0;
         type: RECT;
         description { state: "default" 0.0;
            visible: 0;
            rel1.offset: 1 1;
            rel2.offset: -2 -2;
               color: MENU_BG_COLOR;
         }
         description { state: "active" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         mouse_events:  0;
         clip_to: "disabler";
         scale: 1;
         description { state: "default" 0.0;
            min: 16 16;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1.offset: 3 3;
            rel2 {
               offset: 3 -5;
               relative: 0.0 1.0;
            }
         }
      }
      part { name: "arrowspace";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            FIXED_SIZE(15,15);
            rel1 {
               offset: -2 0;
               relative: 1.0 0.0;
            }
            rel2.offset: -2 -1;
            align: 1.0 0.5;
         }
      }
      part { name: "elm.text";
         type: TEXT;
         mouse_events:  0;
         effect: SHADOW BOTTOM;
         scale: 1;
         description { state: "default" 0.0;
            rel1 {
               to_x: "elm.swallow.content";
               relative: 1.0 0.0;
               offset: 5 -1;
            }
            rel2 {
               to_x: "arrowspace";
               offset: -6 -1;
               relative: 0.0 1.0;
            }
            color: MENU_BG_COLOR;
            text { font: FN;
               size: 12;
               min: 1 1;
               ellipsis: -1;
               align: 0.0 0.5;
               text_class: "menu_item";
            }
         }
         description { state: "active" 0.0;
            inherit: "default" 0.0;
            color: MENU_TEXT_COLOR;
            color_class: "menu_item_active";
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
            color: MENU_TEXT_DISABLED_COLOR;
            color_class: "menu_item_disabled";
         }
      }
      part { name: "event";
         type: RECT;
         ignore_flags: ON_HOLD;
         description { state: "default" 0.0;
            color: 255 255 255 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "disabler";
         type: RECT;
         description { state: "default" 0.0;
            color: 255 255 255 255;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 128;
         }
      }
   }
   programs {
      program {
         signal: "mouse,in";
         source: "event";
         action: SIGNAL_EMIT "elm,action,activate" "elm";
         after: "selected";
      }
      program {
         signal: "mouse,out";
         source: "event";
         after: "unselected";
      }
      program { signal: "mouse,down,1";
         source: "event";
         after: "selected";
      }
      program {
         signal: "mouse,up,1";
         source: "event";
         action: SIGNAL_EMIT "elm,action,click" "elm";
      }
      program { name: "selected";
         signal: "elm,state,selected";
         source: "elm";
         action: STATE_SET "active" 0.0;
         target: "base";
         target: "elm.text";
      }
      program { name: "unselected";
         signal: "elm,state,unselected";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "base";
         target: "elm.text";
      }
      program {
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "base";
         target: "event";
         target: "disabler";
         target: "elm.text";
      }
      program {
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "base";
         target: "event";
         target: "disabler";
         target: "elm.text";
      }
   }
}

//-------------------------hover----------------------------------------------//
//In the hover used by the menu only the bottom part is used.
group { name: "elm/hover/base/menu/default";
   parts {
      part { name: "elm.swallow.offset";
         type: SWALLOW;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 0.0 0.0;
         }
      }
      part { name: "elm.swallow.size";
         type: SWALLOW;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            rel1 {
               to: "elm.swallow.offset";
               relative: 1.0 1.0;
            }
            rel2 {
               to: "elm.swallow.offset";
               relative: 1.0 1.0;
            }
         }
      }
      part { name: "base";
         type: RECT;
         repeat_events: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "elm.swallow.slot.left";
         type: SWALLOW;
         description { state: "default" 0.0;
         }
      }
      part { name: "elm.swallow.slot.right";
         type: SWALLOW;
         description { state: "default" 0.0;
         }
      }
      part { name: "elm.swallow.slot.top";
         type: SWALLOW;
         description { state: "default" 0.0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "bottomclip";
         type: RECT;
         description { state: "default" 0.0;
            color: 255 255 255 0;
         }
         description { state: "visible" 0.0;
            color: 255 255 255 255;
         }
      }
      part { name: "shadow";
         clip_to: "bottomclip";
         type: RECT;
         description { state: "default" 0.0;
            color: MENU_BORDER_COLOR;
            rel1 {
               to: "bottom";
               offset: -1  -1;
            }
            rel2 {
               to: "bottom";
               offset: 0 0;
            }
         }
      }
      part { name: "top";
         clip_to: "bottomclip";
         type: RECT;
         description { state: "default" 0.0;
            color: 155 120 0 255;
            min: 0 23;
            align: 0.0 0.0;
            fixed: 0 1;
            rel1.to: "bottom";
            rel2 {
               to_x: "bottom";
               to_y: "shine";
               offset: -1 0;
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "bg";
         type: RECT;
         mouse_events: 0;
         clip_to: "bottomclip";
         description { state: "default" 0.0;
            color: 64 64 64 255;
            rel1 {
               to_x: "bottom";
               to_y: "top";
               relative: 0.0 1.0;
            }
            rel2.to: "bottom";
         }
      }
      part { name: "bottom";
         clip_to: "bottomclip";
         type: RECT;
         description { state: "default" 0.0;
            color: MENU_BG_COLOR;
            rel1.to: "elm.swallow.slot.bottom";
            rel2.to: "elm.swallow.slot.bottom";
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "elm.swallow.slot.bottom";
         type: SWALLOW;
         clip_to: "bottomclip";
         description { state: "default" 0.0;
            align: 0.5 0.0;
            rel1 {
               to: "elm.swallow.slot.middle";
               relative: 0.0 1.0;
               offset: 0 0;
            }
            rel2 {
               to: "elm.swallow.slot.middle";
               relative: 1.0 1.0;
               offset: -1 0;
            }
         }
      }
      part { name: "bevel";
         mouse_events: 0;
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.to: "bottom";
            rel2.to: "bottom";
         }
      }
      part { name: "shine";
         mouse_events: 1;
         type: RECT;
         repeat_events:1;
         description { state: "default" 0.0;
            FIXED_SIZE(69, 5)
            color: 0 0 0 0;
            rel1 {
               to: "bottom";
               offset: 0 -2;
            }
            rel2 {
               to: "bottom";
               relative: 1.0 0.0;
               offset: -1 2;
            }
         }
      }
      part { name: "elm.swallow.slot.middle";
         type: SWALLOW;
         repeat_events:1;
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.size";
            rel2.to: "elm.swallow.size";
         }
      }
   }
   programs {
      program { name: "end";
         signal: "mouse,up,1";
         source: "base";
         action: SIGNAL_EMIT "elm,action,dismiss" "elm";
      }
      program { name: "bottomshow";
         signal: "elm,action,slot,bottom,show";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "bottomclip";
         target: "bottom";
         target: "elm.swallow.slot.bottom";
      }
      program { name: "bottomhide";
         signal: "elm,action,slot,bottom,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "bottomclip";
         target: "bottom";
         target: "elm.swallow.slot.bottom";
      }
   }
}

//In the hover used by the submenu only the bottom part is used
//and no part should interact except the bottom area
group { name: "elm/hover/base/submenu/default";
   inherit: "elm/hover/base/menu/default";
   parts {
      part { name: "elm.swallow.offset";
         repeat_events: 1;
         description { state: "default" 0.0;
            rel1.offset: 2 0;
         }
      }
      //here we don't catch events like the hover does
      part { name: "base";
         type: RECT;
         repeat_events: 1;
         description { state: "visible" 0.0;
            color: 0 0 0 0;
            visible: 0;
         }
      }
   }
}

group { name: "elm/hover/base/main_menu/default";
   parts {
      part { name: "elm.swallow.offset";
         type: SWALLOW;
         description { state: "default" 0.0;
            visible: 0;
            fixed: 1 1;
         }
      }
      part { name: "elm.swallow.size";
         type: SWALLOW;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            fixed: 1 1;
            rel1.offset: 0 0;
            rel2.relative: 0.0 0.0;
         }
      }
      part { name: "bottomclip";
         type: RECT;
         description { state: "default" 0.0;
            rel1.offset: -1 -2;
         }
      }
      part { name: "bevel";
         mouse_events: 0;
         type: RECT;
         description { state: "default" 0.0;
            color: 59 61 62 255;
            rel1.to_y: "bottom";
            rel2.to_y: "bottom";
         }
      }
      part { name: "bottom";
         type: RECT;
         clip_to: "bottomclip";
         description { state: "default" 0.0;
            visible: 0;
            rel1 {
               to: "elm.swallow.slot.bottom";
               offset: 0 0;
            }
            rel2 {
               to: "elm.swallow.slot.bottom";
               offset: -1 -1;
            }
         }
      }
      part { name: "elm.swallow.slot.bottom";
         type: SWALLOW;
         clip_to: "bottomclip";
         description { state: "default" 0.0;
            align: 0.5 0.0;
            fixed: 1 0;
            rel1 {
               to: "elm.swallow.size";
               relative: 0.0 1.0;
            }
            rel2.to: "elm.swallow.size";
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
         }
      }
   }
   programs {
      program { name: "bottomshow";
         signal: "elm,action,slot,bottom,show";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         transition: DECELERATE 0.3;
         target: "elm.swallow.slot.bottom";
      }
   }
}

group { name: "elm/hover/base/main_menu_submenu/default";
   parts {
      part { name: "base";
         type: RECT;
         repeat_events: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "elm.swallow.offset";
         type: SWALLOW;
         repeat_events: 1;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            rel2.relative: 0.0 0.0;
         }
      }
      part { name: "elm.swallow.size";
         type: SWALLOW;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            rel1 {
               to: "elm.swallow.offset";
               relative: 1.0 1.0;
            }
            rel2.to: "elm.swallow.offset";
         }
      }
      part { name: "bottomclip";
         type: RECT;
         description { state: "default" 0.0;
            rel1 {
               to_y: "pop";
               relative: 0.0 1.0;
            }
            rel1.offset: -1 -2;
         }
      }
      part { name: "bg";
         type: RECT; mouse_events: 1;
         clip_to: "bottomclip";
         description { state: "default" 0.0;
         rel1 {
               to_x: "elm.swallow.slot.bottom";
               relative: 0.0 0.0;
               offset: 1 0;
            }
            rel2.to: "elm.swallow.slot.bottom";
            color: MENU_BG_COLOR;
         }
      }
      part { name: "elm.swallow.slot.bottom";
         type: SWALLOW;
         clip_to: "bottomclip";
         description { state: "default" 0.0;
            align: 0.5 1.0;
            rel1 {
               to: "elm.swallow.slot.middle";
               relative: 0.0 1.0;
               offset: 0 0;
            }
            rel2 {
               to: "elm.swallow.slot.middle";
               relative: 1.0 1.0;
               offset: -1 0;
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            rel1.offset: 0 6;
            rel2.offset: -1 6;
            align: 0.5 0.0;
         }
      }
      part { name: "pop";
         type: RECT;
         mouse_events: 1;
         repeat_events:1;
         description { state: "default" 0.0;
            visible: 0;
            rel1 {
               to: "elm.swallow.slot.middle";
               relative: 0.0 1.0;
            }
            rel2 {
               to: "elm.swallow.slot.middle";
               offset: -1 0;
            }
         }
      }
      part { name: "elm.swallow.slot.middle";
         type: SWALLOW;
         repeat_events:1;
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.size";
            rel2.to: "elm.swallow.size";
         }
      }
   }
   programs {
      program { name: "end";
         signal: "mouse,up,1";
         source: "base";
         action: SIGNAL_EMIT "elm,action,dismiss" "elm";
      }
      program { name: "bottomshow";
         signal: "elm,action,slot,bottom,show";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         transition: DECELERATE 0.3;
         target: "elm.swallow.slot.bottom";
      }
      program { name: "bottomhide";
         signal: "elm,action,slot,bottom,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "elm.swallow.slot.bottom";
      }
   }
}
