class Ewe_Entry (Elm_Entry)
{
   eo_prefix: ewe_obj_entry;
   data: Ewe_Entry_Data;
   properties {
      regex_glow {
         get {
            /*@
             Returns boolean to check if redex error-signals emition is on/off

             @return EINA_TRUE if signals glowing is on, otherwise, returns EINA_FALSE.

             @ingroup Entry */
         }
         values {
            Eina_Bool glow;
         }
      }
      regex_autocheck {
         get {
            /*@
             Returns boolean to check if redex autocheck is on/off

             @return EINA_TRUE if autocheck is on, otherwise, returns EINA_FALSE.

             @ingroup Entry */
         }
         values {
            Eina_Bool autocheck;
         }
      }
      regex_error {
         get {
            /*@
             Returns last regex error
             @return The last regex error.

             @ingroup Entry */
         }
         values {
            int error;
         }
      }
      regex_error_text {
         get {
            /*@
             Returns last regex error text
             @return The last regex error text.

             @ingroup Entry */
         }
         values {
            const(char) *error;
         }
      }
   }
   methods {
      regex_set {
         /*@
          Set regular expresion to be compiled and used.

          @return EINA_TRUE on success, otherwise returns EINA_FALSE.

          @ingroup Entry*/
         return: Eina_Bool;
         params {
            @in const(char) *regex_str; /*@The text of regular expresion*/
            @in int flags; /*@Compile flags for regex*/
         }
      }
      regex_unset {
         /*@
          Unset previoustly set regular expresion.

          @return EINA_TRUE on success, otherwise returns EINA_FALSE.

          @ingroup Entry*/
         return: Eina_Bool;
      }
      regex_check {
         /*@
          Check current text of Entry with previoustly set regular expresion.

          @return EINA_TRUE on success, otherwise returns EINA_FALSE.

          @ingroup Entry*/
         return: Eina_Bool;
      }
      regex_autocheck_set {
         /*@
          Set automatical regex check on "entry,changed".
          Signals will be processed only for focused entry.
          @return EINA_TRUE on success, otherwise returns EINA_FALSE.

          @ingroup Entry*/
         return: Eina_Bool;
         params {
            @in Eina_Bool autocheck; /*@Boolean to set autocheck on/off*/
         }
      }
      regex_glow_set {
         /*@
          Set if regex error signals for EDJE should be emitted.
          @return EINA_TRUE on success, otherwise returns EINA_FALSE.

          @ingroup Entry*/
         return: Eina_Bool;
         params {
            @in Eina_Bool glow; /*@Boolean to set signals emition on/off*/
         }
      }
   }
   implements {
      class.constructor;
      Eo.Base.constructor;
      Eo.Base.destructor;
      Elm_Widget.theme_apply;
      Elm_Widget.disable;
   }
   events {
      focus,out;
   }
}
